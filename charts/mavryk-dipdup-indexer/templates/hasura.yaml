{{- if .Values.hasura.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: hasura
  labels:
    app: hasura
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
  selector:
    app: hasura
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasura
  labels:
    app: hasura
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      labels:
        app: hasura
    spec:
      {{- if .Values.images.hasura.imagePullSecret }}
      imagePullSecrets:
          - name: '{{ .Values.images.hasura.imagePullSecret }}'
      {{- end }}
      containers:
        - name: hasura
          {{- if .Values.hasura.resources.enabled }}
          resources:
            requests:
              memory: '{{ .Values.hasura.resources.requests.memory }}'
              cpu: '{{ .Values.hasura.resources.requests.cpu }}'
            limits:
              memory: '{{ .Values.hasura.resources.limits.memory }}'
              cpu: '{{ .Values.hasura.resources.limits.cpu }}'
          {{- end }}
          env:
            - name: HASURA_GRAPHQL_ENABLE_TELEMETRY
              value: '{{ .Values.hasura.config.enableTelemetry }}'
            - name: HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL
              value: '{{ .Values.hasura.config.graphqlLiveQueriesMultiplexedRefetchInterval }}'
            - name: HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_BATCH_SIZE
              value: '{{ .Values.hasura.config.graphqlLiveQueriesMultiplexedBatchSize }}'
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: '{{ .Values.hasura.config.enableConsole }}'
            - name: HASURA_GRAPHQL_DEV_MODE
              value: '{{ .Values.hasura.config.devMode }}'
            - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
              value: startup, http-log, webhook-log, websocket-log, query-log
            - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
              value: '{{ .Values.hasura.config.unauthorizedRole }}'
            - name: HASURA_GRAPHQL_ADMIN_SECRET
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.hasura.hasuraSecretName }}'
                  key: HASURA_GRAPHQL_ADMIN_SECRET
            - name: HASURA_GRAPHQL_CORS_DOMAIN
              value: '{{ include "listToCSV" .Values.hasura.config.corsDomains }}'
            - name: HASURA_GRAPHQL_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.hasura.hasuraSecretName }}'
                  key: HASURA_GRAPHQL_DATABASE_URL
          {{- range .Values.hasura.extraEnv }}
            - name: {{ .name }}
              {{- if ((.value))}}
              value: "{{.value}}"
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
              {{- end }}
          {{- end }}
          image: '{{ .Values.images.hasura.registry }}/{{ .Values.images.hasura.repository }}:{{ .Values.images.hasura.tag }}'
          imagePullPolicy: '{{ .Values.images.hasura.imagePullPolicy }}'
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hasura
{{- with .Values.hasura.ingress.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
{{- end }}
  annotations:
{{- with .Values.hasura.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  ingressClassName: {{ .Values.hasura.ingress.className }}
  {{- if .Values.hasura.ingress.tls }}
  tls:
    {{- range .Values.hasura.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ .Values.hasura.ingress.host }}
      http:
        paths:
          - path: /
            pathType: {{ .Values.hasura.ingress.pathType }}
            backend:
              service:
                name: hasura
                port:
                  number: 8080
{{- end }}
