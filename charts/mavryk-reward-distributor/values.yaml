images:
  mavryk_reward_distributor: trdo/tezos-reward-distributor:latest

mavryk_k8s_images:
  # snapshotEngine is needed for upload of logs to bucket
  # since it already exists, we do not create a new container
  # just for this task.
  snapshotEngine: ghcr.io/mavryk-network/mavryk-k8s-snapshotengine:master

# The node endpoint. It must be an archive node.
# May start with https://
# Default value will connect to a mavryk-k8s private chain running in the same workspace, with
# default parameters.
mavryk_node_addr: archive-baking-node-0.archive-baking-node:8732

# The signer endpoint. Must be able to sign for the TRD payment address configured below.
# May start with https://
# Default value will connect to a mavryk-k8s private chain running in the same workspace, with
# default parameters.
signer_addr: mavryk-signer-0.mavryk-signer:6732

# The schedule for reward distribution cron job. By default, runs every 6 hours.
# When there is nothing to pay, it just exits.
schedule: "0 */6 * * *"

# Where TRD gets its payout data from.
# Defaults to rpc. When using rpc, you must set `mavryk_node_addr` to an archive node.
#
# Pick one of "rpc", "tzstats", "mvkt"
reward_data_provider: "rpc"

# Mavryk Network. Can be MAINNET or BASENET
network: MAINNET

# Enable adjusted early payouts. Pay out 6-9 days after delegation instead of 18-21 days.
adjusted_early_payouts: false

# Set initial cycle to pay rewards from. Set to -1 to start from just finished cycle.
initial_cycle: -1

# Dry-run. Set to "true" to not actually perform the payouts.
dry_run: false

extra_trd_args: "--do_not_publish_stats"

# This is an example of TRD config. Customize to your needs.
# For details, please consult TRD documentation:
#  https://tezos-reward-distributor-organization.github.io/tezos-reward-distributor/
trd_config:
  # version: 1.0
  # baking_address: mv1PrNm1ovqs396uKKcKNwzVbbtmyHd2EDcp
  # payment_address: mv1PrNm1ovqs396uKKcKNwzVbbtmyHd2EDcp
  # rewards_type: actual
  # service_fee: 4.5
  # founders_map:
  #   {'mv1PrNm1ovqs396uKKcKNwzVbbtmyHd2EDcp' : 1.0}
  # owners_map:
  #   {'mv1TEvAifHm6LCXXtG1gKXoJ53vmQ9QaHJHH' : 0.3,
  #    'mv1PrNm1ovqs396uKKcKNwzVbbtmyHd2EDcp' : 0.7}
  # specials_map: {}
  # supporters_set: {}
  # min_delegation_amt: 100
  # reactivate_zeroed: True
  # delegator_pays_xfer_fee: True
  # delegator_pays_ra_fee: True
  # pay_denunciation_rewards: True
  # rules_map:
  #   KT1MMhmTkUoHez4u58XMZL7NkpU9FWY4QLn3: KT1MMhmTkUoHez4u58XMZL7NkpU9FWY4QLn0
  #   KT1D33n8zp1bqBkViiQtLLPLEGRW9xcqihY3: KT1MMhmTkUoHez4u58XMZL7NkpU9FWY4QLn0
  #   KT1Ao8UXNJ9Dz71Wx3m8yzYNdnNQp2peqtM0: TOE
  #   KT1VyxJWhe9oz3v4qwTp2U6Rb17ocHGpJmW0: TOB
  #   KT19cJWfbDNXT4azVbgTBvtLMeqweuHH8W20: TOF
  #   KT1DextebDNXT4azVbgTBvtLMeqweuHH8W20: Dexter
  #   mindelegation: TOB
  # plugins:
  #   enabled:
  #   - webhook
  #   email:
  #     smtp_user: user@example.com
  #     smtp_pass: horsebatterystaple2
  #     smtp_host: smtp.example.com
  #     smtp_port: 587
  #     smtp_tls: true
  #     smtp_sender: trdnotice@example.com
  #     smtp_recipients:
  #       - bob@example.com
  #       - alice@example.com
  #   telegram:
  #     admin_chat_ids:
  #       - 123456789
  #     payouts_chat_ids:
  #       - -13134455
  #     bot_api_key: 988877766:SKDJFLSJDFJLJSKDFJLKSDJFLKJDF
  #     telegram_text: >
  #       Rewards for cycle %CYCLE% are completed.
  #       We paid out %TREWARDS% mav in rewards to %NDELEGATORS% delegators.
  #   twitter:
  #     api_key: XXXXXXXX
  #     api_secret: ZZZZZZZZ
  #     access_token: YYYYYYYY
  #     access_secret: WWWWWWWW
  #     extra_tags:
  #       - "our_baker"
  #       - "mavryk"
  #       - "rewards"
  #   webhook:
  #     endpoint: https://example.com/webhook.php
  #     token: Xynl6svphysd3BhjLP6IS
  #   discord:
  #     endpoint: https://discord.com/api/webhooks/9876543212345678/OmAfadfasdfasdfasdfasdfasdfasfsdf
  #     send_admin: False
  #     discord_text: >
  #       Rewards for cycle %CYCLE% are completed.
  #       We paid out %TREWARDS% mav in rewards to %NDELEGATORS% delegators.

# optionally upload all TRD state to a bucket. This allows all data to be examined
# when the cronjob is not running.
bucket_upload:
  bucket_endpoint_url:
  bucket_name: 
bucket_upload_secrets:
  access_key_id:
  default_region:
  secret_access_key:
